{{!< default}}
{{!-- Тег выше означает: вставьте все в этом файле в {body} default.hbs template --}}

<header class="site-home-header">
  {{> header-background background=@site.cover_image}}
  {{!--Специальный header-image.hbs частично для создания фонового изображения--}}
  <div class="inner">
    {{> "site-nav"}}
    <div class="site-header-content">
      <h1 class="site-title">
        {{#if @site.logo}}
        <img class="site-logo" src="{{img_url @site.logo size="l"}}" alt="{{@site.title}}" />
        {{else}}
        {{@site.title}}
        {{/if}}
      </h1>
      <h2 class="site-description">{{@site.description}}</h2>
    </div>
  </div>
  </div>
</header>

{{!-- Область основного контента --}}
<main id="site-main" class="site-main outer">
  <div class="inner posts">

    <div class="post-feed">
      {{#foreach posts}}

      {{!-- Тег ниже включает в себя разметку для каждого поста - partials/post-card.hbs --}}
      {{> "post-card"}}

      {{/foreach}}
    </div>

  </div>
</main>

{{> site-header}}

{{!-- Помощник #contentFor здесь будет посылать все внутри него до соответствия #block найден в default.hbs --}}
{{#contentFor "scripts"}}
<script>

  // Примечание: производительность прокрутки в Safari низкая 
  // - это, по-видимому, связано с тем, что события в Safari запускаются гораздо медленнее.
  // Удаление события прокрутки и использование только цикла raf приводит к более плавной 
  // прокрутке, но непрерывной обработке, даже если она не прокручивается
  $(document).ready(function () {

    var nav = document.querySelector('.site-nav-main .site-nav');
    var feed = document.querySelector('.post-feed');

    var lastScrollY = window.scrollY;
    var lastWindowHeight = window.innerHeight;
    var lastDocumentHeight = $(document).height();
    var ticking = false;

    function onScroll() {
      lastScrollY = window.scrollY;
      requestTick();
    }

    function onResize() {
      lastWindowHeight = window.innerHeight;
      lastDocumentHeight = $(document).height();
      requestTick();
    }

    function requestTick() {
      if (!ticking) {
        requestAnimationFrame(update);
      }
      ticking = true;
    }

    function update() {
      var trigger = feed.getBoundingClientRect().top + window.scrollY;
      var progressMax = lastDocumentHeight - lastWindowHeight;

      // show/hide nav
      if (lastScrollY >= trigger - 20) {
        nav.classList.add('fixed-nav-active');
      } else {
        nav.classList.remove('fixed-nav-active');
      }

      ticking = false;
    }

    window.addEventListener('scroll', onScroll, { passive: true });
    window.addEventListener('resize', onResize, false);

    update();

  });
</script>
{{/contentFor}}